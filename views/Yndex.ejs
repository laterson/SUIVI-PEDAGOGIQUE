<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8" />
<title>Collecte des indicateurs ‚Äì Arts plastiques</title>
<style>
  :root{--bg:#f7f7f7;--b:#9aa0a6;--th:#e9ecef}
  *{box-sizing:border-box}
  body{font-family:Arial,Helvetica,sans-serif;background:var(--bg);margin:0;padding:20px}
  h1{margin:0 0 16px}
  h2{margin:18px 0 8px}
  .meta{display:flex;gap:10px;justify-content:space-between;align-items:center;margin-bottom:10px}
  label,select{display:block;margin:8px 0 0}
  .bloc{background:#fff;border:1px solid var(--b);border-radius:8px;padding:10px 10px 4px;box-shadow:0 2px 6px rgba(0,0,0,.04);margin-bottom:18px}
  .bloc header{display:flex;align-items:center;justify-content:space-between}
  .bloc header .actions{display:flex;gap:8px}
  .btn{border:1px solid #bdbdbd;background:#fafafa;border-radius:6px;padding:6px 10px;font-size:12px;cursor:pointer}
  .btn:hover{background:#f0f0f0}
  table{width:100%;border-collapse:collapse;font-size:12px;margin-top:8px}
  th,td{border:1px solid var(--b);padding:4px 6px;text-align:center;vertical-align:middle}
  th{background:var(--th)}
  td[contenteditable]{background:#fffbe6;text-align:left}
  input[type=number]{width:72px}
  .totalRow td{background:#f6f6f6;font-weight:600}
  .note{opacity:.75}
  .hidden{display:none}
</style>
</head>
<body>

<h1>Collecte des indicateurs p√©dagogiques</h1>

<div class="meta">
  <div>Connect√© : <strong><%= user.nom %></strong> ‚Äî <em><%= user.etab %></em></div>
  <form action="/auth/logout" method="post"><button class="btn">‚Ü© D√©connexion</button></form>
</div>

<label for="cycle">Choisir le cycle :</label>
<select id="cycle">
  <option value="">-- Choisir --</option>
  <option value="premier">Premier cycle</option>
  <option value="second">Second cycle</option>
</select>

<div id="specialiteContainer" class="hidden">
  <label for="specialite">Choisir la sp√©cialit√© :</label>
  <!-- valeurs = cl√©s techniques; libell√©s = affichage -->
  <select id="specialite">
    <option value="">-- Choisir --</option>
  </select>
</div>

<div id="evaluationContainer" class="hidden">
  <label for="evaluation">Choisir l'√©valuation :</label>
  <select id="evaluation">
    <option value="">-- Choisir l'√©valuation --</option>
    <option value="1">√âvaluation 1</option><option value="2">√âvaluation 2</option>
    <option value="3">√âvaluation 3</option><option value="4">√âvaluation 4</option>
    <option value="5">√âvaluation 5</option><option value="6">√âvaluation 6</option>
  </select>
</div>

<div id="formulaires"></div>

<div class="bloc hidden" id="cycleTotalBloc">
  <header>
    <h2 id="cycleTotalTitre">Total/Moyenne du cycle</h2>
    <div class="actions">
      <button class="btn" id="btnSoumettre" onclick="soumettre()">üì§ Soumettre</button>
      <button class="btn" onclick="exportCSV()">‚¨áÔ∏è Export CSV</button>
      <span class="note">Les pourcentages s‚Äôaffichent en ¬´ ‚Äî ¬ª quand le total est 0.</span>
    </div>
  </header>
  <table id="cycleTotalTable"></table>
</div>

<script>
/* ======================== SESSION ======================== */
const CONNECTED_USER = {
  id  : "<%= user.id   %>",
  nom : "<%= user.nom  %>",
  etab: "<%= user.etab %>",
  role: "<%= user.role %>"
};

/* ======================== DONN√âES ======================== */
/* Sp√©cialit√©s propos√©es selon le cycle */
const specialitesByCycle = {
  premier: [
    { value:'DECO', label:'D√©coration (DECO)' }
  ],
  second: [
    { value:'AF1', label:'AF1 ‚Äì C√©ramique' },
    { value:'AF2', label:'AF2 ‚Äì Peinture' },
    { value:'AF3', label:'AF3 ‚Äì Sculpture' }
  ]
};

/* Classes PAR SP√âCIALIT√â (selon ta structure) */
const classesBySpec = {
  DECO: ['1√®re ann√©e DECO','2√®me ann√©e DECO','3√®me ann√©e DECO','4√®me ann√©e DECO'],
  AF1 : ['2nde AF1','1√®re AF1','Tle AF1'],
  AF2 : ['2nde AF2','1√®re AF2','Tle AF2'],
  AF3 : ['2nde AF3','1√®re AF3','Tle AF3']
};

/* Disciplines par d√©faut (modifiable par l‚Äôanimateur) */
const defaultsBySpec = {
  DECO: [
    'Dessin technique','D√©coration model√©e',"Histoire de l'art",
    'Technologie des mat√©riaux','Outillage','Dessin de d√©cor'
  ],
  AF1: [
    'Technologie des mat√©riaux',"Histoire de l'art",'Anatomie artistique',
    'Atelier AF1','Dessin g√©om√©trique',"Dessin d‚Äôapr√®s nature"
  ],
  AF2: [
    'Technologie des mat√©riaux',"Histoire de l'art",'Atelier AF2',
    'Peinture sur toile','Couleur et perspective',"Dessin d‚Äôapr√®s nature"
  ],
  AF3: [
    'Technologie des mat√©riaux',"Histoire de l'art",'Atelier AF3',
    'Sculpture sur bois','Modelage','Croquis de sculpture'
  ]
};

/* ======================== DOM ======================== */
const selCycle = document.getElementById('cycle');
const selSpec  = document.getElementById('specialite');
const contSpec = document.getElementById('specialiteContainer');
const contEval = document.getElementById('evaluationContainer');
const formulaires = document.getElementById('formulaires');
const cycleTotalBloc  = document.getElementById('cycleTotalBloc');
const cycleTotalTitre = document.getElementById('cycleTotalTitre');
const cycleTotalTable = document.getElementById('cycleTotalTable');

/* ======================== UI ======================== */
selCycle.addEventListener('change', ()=>{
  // reset
  formulaires.innerHTML = '';
  cycleTotalBloc.classList.add('hidden');
  contEval.classList.add('hidden');

  // sp√©cialit√©s du cycle
  selSpec.innerHTML = '<option value="">-- Choisir --</option>';
  const opts = specialitesByCycle[selCycle.value] || [];
  opts.forEach(o=> selSpec.insertAdjacentHTML('beforeend', `<option value="${o.value}">${o.label}</option>`));
  contSpec.classList.toggle('hidden', !opts.length);
});

selSpec.addEventListener('change', ()=>{
  formulaires.innerHTML = '';
  const spec = selSpec.value;
  if(!spec) { contEval.classList.add('hidden'); cycleTotalBloc.classList.add('hidden'); return; }
  contEval.classList.remove('hidden');

  // construire les 3/4 blocs classe selon la sp√©cialit√©
  (classesBySpec[spec]||[]).forEach(cls => createClassBlock(cls, spec));

  // events + total cycle
  formulaires.querySelectorAll('input[type=number]')
             .forEach(i=> i.addEventListener('input', recalcAll));
  buildCycleTotalTable();
  recalcAll();
});

/* ======================== TABLES ======================== */
function tableHead(){
  return `<thead>
    <tr>
      <th rowspan="2" style="text-align:left">Module / Discipline</th>
      <th colspan="3">Couverture des heures</th>
      <th colspan="6">Couverture des programmes</th>
      <th colspan="6">R√©alisation des TP</th>
      <th colspan="3">R√©ussite des √©l√®ves</th>
      <th colspan="3">Assiduit√© et ponctualit√© des enseignants</th>
    </tr>
    <tr>
      <th>Heures dues</th><th>Heures faites</th><th>%</th>
      <th>Nbre de le√ßons pr√©vues</th><th>Nbre de le√ßons faites</th><th>%</th>
      <th>Nbre de le√ßons digitalis√©es pr√©vues</th><th>Nbre de le√ßons digitalis√©es faites</th><th>%</th>
      <th>Nbre pr√©vu</th><th>Nbre fait</th><th>%</th>
      <th>Nbre digitalis√© pr√©vu</th><th>Nbre digitalis√© fait</th><th>%</th>
      <th>Nbre d'√©l√®ves ayant compos√©</th><th>Nbre de moy ‚â• 10/20</th><th>% de r√©ussite</th>
      <th>Effectif des enseignants</th><th>En poste</th><th>%</th>
    </tr>
  </thead>`;
}

function lineHTML(nom){
  return `<tr>
    <td contenteditable="true">${nom}</td>
    ${Array.from({length:21}).map((_,i)=> (i+1)%3===0
       ? `<td class="pct${i+1}">‚Äî</td>`
       : `<td><input type="number" class="val${i+1}" min="0"></td>`
     ).join('')}
  </tr>`;
}

function createClassBlock(classe, spec){
  const wrap = document.createElement('section');
  wrap.className = 'bloc';

  wrap.innerHTML = `
    <header>
      <h2>${classe} ‚Äì ${spec}</h2>
      <div class="actions">
        <button class="btn" onclick="addLine(this)">+ Ajouter une discipline</button>
      </div>
    </header>
    <table>${tableHead()}<tbody></tbody></table>
  `;

  const tbody = wrap.querySelector('tbody');
  const defaults = defaultsBySpec[spec] || [];
  tbody.innerHTML = defaults.map(lineHTML).join('');

  // ligne total
  const total = document.createElement('tr');
  total.className = 'totalRow';
  total.innerHTML =
    `<td><strong>total ${classe.toLowerCase()}</strong></td>` +
    Array.from({length:21}).map((_,i)=>
      (i+1)%3===0
        ? `<td class="total pct${i+1}"><strong>‚Äî</strong></td>`
        : `<td class="total sum sum${i+1}"><strong>0</strong></td>`
    ).join('');
  tbody.appendChild(total);

  formulaires.appendChild(wrap);
}

/* ======================== CALCULS ======================== */
const pctTxt = (a,b)=> a>0 ? ((b/a)*100).toFixed(2)+' %' : '‚Äî';

function recalcAll(){
  // % par ligne
  document.querySelectorAll('.bloc tbody tr:not(.totalRow)').forEach(tr=>{
    const v=i=> tr.querySelector(`.val${i}`)?.valueAsNumber || 0;
    [[1,2,3],[4,5,6],[7,8,9],[10,11,12],[13,14,15],[16,17,18],[19,20,21]]
      .forEach(([a,b,p])=> tr.querySelector(`.pct${p}`).textContent = pctTxt(v(a),v(b)));
  });

  // totaux par classe
  document.querySelectorAll('.bloc table').forEach(tbl=>{
    const rows = [...tbl.tBodies[0].rows];
    const total = rows[rows.length-1];
    const data  = rows.slice(0,-1);
    const sum = n => data.reduce((acc,tr)=> acc + (+tr.querySelector(`.val${n}`)?.value||0), 0);

    [[1,2,3],[4,5,6],[7,8,9],[10,11,12],[13,14,15],[16,17,18],[19,20,21]]
    .forEach(([a,b,p])=>{
      const A=sum(a), B=sum(b);
      total.querySelector(`.sum${a}`).innerHTML = `<strong>${A}</strong>`;
      total.querySelector(`.sum${b}`).innerHTML = `<strong>${B}</strong>`;
      total.querySelector(`.pct${p}`).innerHTML = `<strong>${pctTxt(A,B)}</strong>`;
    });
  });

  // total cycle
  calcCycleTotal();
}

/* emp√™che "faits" > "dus" pour chaque paire */
document.addEventListener('input', e=>{
  if(!e.target.matches('input[type=number]')) return;
  const row = e.target.closest('tr');
  const inputs = [...row.querySelectorAll('input')];
  for(let i=0;i<inputs.length;i+=2){
    const due = +inputs[i].value || 0;
    if((+inputs[i+1].value) > due) inputs[i+1].value = due;
  }
  recalcAll();
});

/* ajout/suppression lignes */
function addLine(btn){
  const tbody = btn.closest('.bloc').querySelector('tbody');
  const total = tbody.querySelector('.totalRow');
  const holder = document.createElement('tbody');
  holder.innerHTML = lineHTML('Nouvelle discipline');
  const tr = holder.firstElementChild;
  tbody.insertBefore(tr, total);
  tr.querySelectorAll('input').forEach(i=> i.addEventListener('input', recalcAll));
  recalcAll();
}
document.addEventListener('contextmenu', e=>{
  const tr = e.target.closest('tr');
  if(tr && tr.parentElement.tagName==='TBODY' && !tr.classList.contains('totalRow')){
    e.preventDefault();
    if(confirm('Supprimer cette discipline ?')) { tr.remove(); recalcAll(); }
  }
});

/* ================= TOTAL / MOYENNE DU CYCLE ================ */
function buildCycleTotalTable(){
  cycleTotalTitre.textContent = `Total/Moyenne ${selCycle.value==='premier' ? '1er' : '2nd'} cycle`;
  cycleTotalTable.innerHTML = tableHead() + '<tbody><tr class="cycleRow"></tr></tbody>';
  const row = cycleTotalTable.querySelector('.cycleRow');
  row.innerHTML =
    `<td><strong>${cycleTotalTitre.textContent}</strong></td>` +
    Array.from({length:21}).map((_,i)=>
      (i+1)%3===0
        ? `<td class="cycle pct${i+1}"><strong>‚Äî</strong></td>`
        : `<td class="cycle sum sum${i+1}"><strong>0</strong></td>`
    ).join('');
  cycleTotalBloc.classList.remove('hidden');
}
function calcCycleTotal(){
  if(!cycleTotalTable.querySelector('.cycleRow')) return;
  const row = cycleTotalTable.querySelector('.cycleRow');
  const sumAll = n=>{
    let s = 0;
    document.querySelectorAll('.bloc table').forEach(tbl=>{
      const rows = [...tbl.tBodies[0].rows];
      const data  = rows.slice(0,-1);
      s += data.reduce((acc,tr)=> acc + (+tr.querySelector(`.val${n}`)?.value||0), 0);
    });
    return s;
  };
  [[1,2,3],[4,5,6],[7,8,9],[10,11,12],[13,14,15],[16,17,18],[19,20,21]]
  .forEach(([a,b,p])=>{
    const A=sumAll(a), B=sumAll(b);
    row.querySelector(`.sum${a}`).innerHTML = `<strong>${A}</strong>`;
    row.querySelector(`.sum${b}`).innerHTML = `<strong>${B}</strong>`;
    row.querySelector(`.pct${p}`).innerHTML = `<strong>${pctTxt(A,B)}</strong>`;
  });
}

/* ======================== EXPORT CSV ======================== */
function headerCSV(){
  return [
    'Classe','Discipline',
    'Heures dues','Heures faites','% Heures',
    'Le√ßons pr√©vues','Le√ßons faites','% Le√ßons',
    'Le√ßons digit. pr√©v.','Le√ßons digit. faites','% Le√ßons digit.',
    'TP pr√©vus','TP faits','% TP',
    'TP digit. pr√©v.','TP digit. faits','% TP digit.',
    "√âl√®ves comp.","Moy ‚â• 10/20","% r√©ussite",
    "Eff. ens.","En poste","% poste"
  ];
}
function v(tr, cls){ const el=tr.querySelector(cls); return el?(+el.value||0):0; }
function pctNum(a,b){ return a>0 ? ((b/a)*100).toFixed(2) : ''; }

function exportCSV(){
  const out = [];
  out.push(headerCSV());

  document.querySelectorAll('.bloc').forEach(bloc=>{
    const cls = bloc.querySelector('h2').textContent.split(' ‚Äì ')[0];
    const rows = [...bloc.querySelectorAll('tbody tr:not(.totalRow)')];
    rows.forEach(tr=>{
      out.push([
        cls,
        tr.cells[0].textContent.trim(),
        v(tr,'.val1'), v(tr,'.val2'), pctNum(v(tr,'.val1'),v(tr,'.val2')),
        v(tr,'.val4'), v(tr,'.val5'), pctNum(v(tr,'.val4'),v(tr,'.val5')),
        v(tr,'.val7'), v(tr,'.val8'), pctNum(v(tr,'.val7'),v(tr,'.val8')),
        v(tr,'.val10'),v(tr,'.val11'),pctNum(v(tr,'.val10'),v(tr,'.val11')),
        v(tr,'.val13'),v(tr,'.val14'),pctNum(v(tr,'.val13'),v(tr,'.val14')),
        v(tr,'.val16'),v(tr,'.val17'),pctNum(v(tr,'.val16'),v(tr,'.val17')),
        v(tr,'.val19'),v(tr,'.val20'),pctNum(v(tr,'.val19'),v(tr,'.val20'))
      ]);
    });
  });

  // total cycle ajout en derni√®re ligne
  const cyc = cycleTotalTitre.textContent;
  const row = cycleTotalTable.querySelector('.cycleRow');
  if(row){
    const t = i => row.querySelector(`.sum${i}`).textContent.replace(/\D/g,'')||'0';
    const P = b => row.querySelector(`.pct${b}`).textContent.replace('%','').trim();
    out.push([cyc,'',
      t(1),t(2),P(3),
      t(4),t(5),P(6),
      t(7),t(8),P(9),
      t(10),t(11),P(12),
      t(13),t(14),P(15),
      t(16),t(17),P(18),
      t(19),t(20),P(21)
    ]);
  }

  const csv = out.map(r=>r.map(x=>{
    const s=String(x??''); return /[",;\n]/.test(s)?`"${s.replace(/"/g,'""')}"`:s;
  }).join(';')).join('\n');

  const blob = new Blob([csv],{type:'text/csv;charset=utf-8;'});
  const url  = URL.createObjectURL(blob);
  const a = document.createElement('a');
  const spec = selSpec.value || 'spec';
  const cycLabel = selCycle.value==='premier'?'1er-cycle':'2nd-cycle';
  a.href = url; a.download = `collecte_${cycLabel}_${spec}.csv`;
  document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);
}

/* ======================== SOUMISSION ======================== */
let sending=false;
async function soumettre(){
  if(sending) return;
  const evalNum = +document.getElementById('evaluation').value;
  if(!selCycle.value)  return alert('S√©lectionnez un cycle.');
  if(!selSpec.value)   return alert('S√©lectionnez une sp√©cialit√©.');
  if(!evalNum)         return alert('S√©lectionnez une √©valuation.');

  const payload = {
    cycle      : selCycle.value,
    specialite : selSpec.value,
    evaluation : evalNum,
    etablissement : CONNECTED_USER.etab,
    animateur     : CONNECTED_USER.nom,
    classes  : []
  };

  document.querySelectorAll('.bloc').forEach(bloc=>{
    const cls = bloc.querySelector('h2').textContent.split(' ‚Äì ')[0];
    const classe = { nom: cls, disciplines: [] };
    bloc.querySelectorAll('tbody tr:not(.totalRow)').forEach(tr=>{
      const val=i=> tr.querySelector(`.val${i}`)?.valueAsNumber||0;
      const nom = tr.cells[0].textContent.trim();
      if(!nom) return;
      classe.disciplines.push({
        nom,
        hD:val(1), hF:val(2),
        lp:val(4), lf:val(5),
        ldp:val(7), ldf:val(8),
        tp:val(10), tf:val(11),
        tdp:val(13),tdf:val(14),
        comp:val(16),m10:val(17),
        effTot:val(19),effPos:val(20)
      });
    });
    if(classe.disciplines.length) payload.classes.push(classe);
  });

  try{
    sending=true; document.getElementById('btnSoumettre').disabled = true;
    const r = await fetch('/api/fiches',{
      method:'POST', headers:{'Content-Type':'application/json'},
      body:JSON.stringify(payload), credentials:'same-origin'
    });
    const data = await r.json();
    if(!r.ok) throw new Error(data?.error||'Erreur serveur');
    alert(`${data.message}\nR√©f : ${data.id}`);
  }catch(e){ alert('Erreur : ' + e.message); }
  finally{ sending=false; document.getElementById('btnSoumettre').disabled = false; }
}
</script>
</body>
</html>
